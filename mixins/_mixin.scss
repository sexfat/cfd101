// 函式宣告 @mixin
@mixin center {
  /*置中*/
  margin: 5px auto;
}


// @include font-large
@mixin font-large {
  font-size: 30px;
  color: #333;
}


// @include font-small
@mixin font-small {
  font-size: 16px;
  color: #333;
}

//mixin 一個變數

// 字體大小  @include fontsize(10px);
@mixin fontsize($size) {
  font-size: $size;
  color: #333;
}

//mixin 二個變數  @include rect()
@mixin rect($w:1200px, $h:100vh, $bgc:#fff) {
  width: $w;
  height: $h;
  background-color: $bgc;
  @include center();
}

//   變數： 預設值 / null

//區塊命名名稱 
@mixin rectbox($id, $w, $h:$w) {
  #{$id} {
    width: $w;
    height: $h;
    @content;
  }
}



//btn 按鈕組件 @include (class , 寬度 , 背景色){@content}
@mixin btn($name, $w, $bgc) {
  .btn-#{$name} {
    width: $w;
    padding: 10px;
    text-align: center;
    vertical-align: middle;
    color: #fff;
    background-color: $bgc;
    cursor: pointer;
    margin: 10px;
    border-radius: 5px;
    transition: .2s all ease-in-out;
    @content;

    &:hover {
      background-color: darken($bgc, 20%);
      width: $w * 2;
      padding: 20px;
    }
  }
}

//  位移    // @include push-left( 方向top left ,100){//};
@mixin push-left($dir, $num) {
  @for $i from 1 through $num {
    .push-#{$dir}-#{$i} {
      position: relative;
      #{$dir}: 1px * $i;
      @content;
    }
  }
}



// grid 隔線系統 @include grid(12) {//}
@mixin grid($num) {
  @for $i from 1 through $num {
    .col-#{$i} {
      //width: ($i/12) * 100%;
      flex: 0 0 ($i/$num) * 100%;
      max-width: ($i/$num) * 100%;
      @content;
    }
  }
}


// bgimage 圖片  @include img(檔名list , 檔案格式){//};
@mixin img($images, $format: jpg) {
  @each $img in $images {
    .#{$img}-img {
      background-image: url('images/#{$img}.#{$format}');
      background-repeat: no-repeat;
      border-bottom: 1px solid #333;
      @content;
    }
  }
}

// css prefixes
// -webkit-transition: all 4s ease;
// -moz-transition: all 4s ease;
// -ms-transition: all 4s ease;
// -o-transition: all 4s ease;
// transition: all 4s ease; 

@mixin prefix($p, $val) {

  @each $prefix in '',
  -webkit-,
  -moz-,
  -ms-,
  -o- {
    #{$prefix}#{$p}: $val
  }
}

@mixin prefix-val($p, $val) {

  @each $prefix in '',
  -webkit-,
  -moz-,
  -ms-,
  -o- {
    #{$p}: $prefix+$val
  }
}

// respond module
@mixin rwd($breakpoint) {
  @if $breakpoint==desktop {

    /*桌機*/
    @media screen and (min-width: $desktop) {
      @content;
    }
  }

  @else if $breakpoint==tablet {

    /*平板*/
    @media screen and (min-width: $tablet) {
      @content;
    }
  }

  @else if $breakpoint==mobile {

    /*手機*/
    @media screen and (max-width: $mobile) {
      @content;
    }
  }
}


// responsive  

$breakpoint : (
  large-desktop: 1920px,
  desktop : 1200px,
  tablet : 996px,
  mobile: 720px,
  xs-mobile: 360px   
); // map



@mixin respond_each($res) {
  @each $viewpoint, $num in $breakpoint {
    @if $res == $viewpoint {
      @media all and (min-width: $num) {
        @content;
      }
    }
  }
}










